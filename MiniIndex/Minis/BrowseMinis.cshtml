@model MiniIndex.Minis.BrowseModel
@using Anaximander.Linq
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    if(Model.Minis.TotalPages == 1){
        ViewData["Title"] += Model.Minis.Count.ToString("N0");
    }else{
        ViewData["Title"] += (Model.Minis.TotalPages * Model.Minis.PageSize).ToString("N0");
    }

    if(!string.IsNullOrEmpty(Model.SearchModel.SearchString)){
        ViewData["Title"] += " " + Model.SearchModel.SearchString;
    }
    ViewData["Title"] += " Minis";

    int pageRangeSize = 3;

    var pagesToLink = Enumerable.Range(1, Model.Minis.TotalPages)
        .Where(i => i <= pageRangeSize || Math.Abs(Model.Minis.PageIndex - i) <= pageRangeSize || Math.Abs(Model.Minis.TotalPages - i) < pageRangeSize)
        .Distinct()
        .OrderBy(x => x)
        .BoxWhile((a, b) => b - a == 1);
}

@section Scripts
{
    <environment include="Development">
        <script type="module" src="~/js/latest.js"></script>
    </environment>

    <environment include="Staging">
        <script src="~/dist/latest.entry.js"></script>
    </environment>

    <environment include="Production">
        <script src="https://miniindex.azureedge.net/latest.entry.js"></script>
    </environment>
}

<div>
    <div>
        @if (Model.ShowRateResults)
        {
            <div>
                <h2>Happy with your search results?</h2>
                Please take a second to <a href="https://forms.office.com/Pages/ResponsePage.aspx?id=DQSIkWdsW0yxEjajBLZtrQAAAAAAAAAAAANAAYEBbR1URTIxTVpVOVdBUDFHUkhHR1RFT1RGSzZSSi4u">rate the results</a> below and give us any feedback.
            </div>
        }
        <div>
            @await Html.PartialAsync("MiniListView", Model.Minis)
        </div>
    </div>

    @if(Model.Minis.HasNextPage){
        <div style="text-align: center; margin: 16px">
            <a href="#" id="nextPageBtn" class="btn btn-block style-primary-border">Next Page</a>
        </div>
    }
</div>