@model MiniIndex.Minis.BrowseModel
@using Anaximander.Linq

@{
    ViewData["Title"] = "Browse Minis";

    int pageRangeSize = 3;

    var pagesToLink = Enumerable.Range(1, Model.Minis.TotalPages)
        .Where(i => i <= pageRangeSize || Math.Abs(Model.Minis.PageIndex - i) <= pageRangeSize || Math.Abs(Model.Minis.TotalPages - i) < pageRangeSize)
        .Distinct()
        .OrderBy(x => x)
        .BoxWhile((a, b) => b - a == 1);
}

@section Scripts
{
    <script type="module" src="~/dist/tags.entry.js" defer></script>
    <link rel="stylesheet" href="~/dist/tags.css">
}

<div class="container-fluid">
    <div class="row">
        <h2>Search the Index</h2>
    </div>

    <div class="row">
        <div class="col-lg-3">
            <div class="sidebar-item container-fluid">
                @await Html.PartialAsync("MiniSearchView", Model.SearchModel)
            </div>
        </div>

        <div class="col-lg-9">
            @if (String.IsNullOrWhiteSpace(Model.SearchModel.SearchString))
            {
                <h2>Most Recent Results</h2>
            }
            else
            {
                <h2>Most Relevant Results</h2>
            }
            <div class="content-section container-fluid">
                @await Html.PartialAsync("MiniListView", Model.Minis)
            </div>
            <div align="center">
                @foreach (var pageGroup in pagesToLink.Select((x, i) => (pages: x, groupIndex: i)))
                {
                    if (pageGroup.groupIndex != 0)
                    {
                        <span> ... </span>
                    }

                    @foreach (var pageIndex in pageGroup.pages)
                    {
                        @if (pageIndex == Model.Minis.PageIndex)
                        {
                            <span><b><u>@pageIndex</u></b></span>
                        }
                        else
                        {
                            @Html.ActionLink(pageIndex.ToString(), "BrowseMinis", "Minis", new
                                {
                                    searchString = Model.SearchModel.SearchString,
                                    pageSize = Model.Minis.PageSize,
                                    pageIndex,
                                    FreeOnly = Model.SearchModel.FreeOnly,
                                    Tags = string.Join(",", Model.SearchModel.Tags)
                                },
                                new { @class = "btn" })
                        }
                    }
                }
            </div>
        </div>
    </div> 
</div>