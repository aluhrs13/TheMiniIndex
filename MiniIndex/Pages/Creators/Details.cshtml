@page
@using MiniIndex.Models
@using Microsoft.Extensions.Configuration
@inject SignInManager<IdentityUser> SignInManager
@inject IConfiguration Configuration

@model MiniIndex.Pages.Creators.DetailsModel

@{
    ViewData["Title"] = Model.Creator.Name + " Details";
}

<h1>@Html.DisplayFor(model => model.Creator.Name)</h1>

@foreach (var site in Model.Creator.Sites)
{
    <a href="@site.CreatorPageUri" class="btn btn-primary">@site.DisplayName</a>
}

<div id="scan-container">
    @if (User.IsInRole("Moderator"))
    {
        <hr />
        <div class="card shadow">
            <div class="card-body">
                <h2 class="card-title">Scan Creator</h2>
                @foreach (var site in Model.Creator.Sites)
                {
                    <a href="http://miniindexprofileparser.azurewebsites.net/api/ProfileParser?code=@Model.FunctionsCode&url=@site.CreatorPageUri" class="btn btn-primary">Scan @site.DisplayName</a>
                }
            </div>
        </div>
    }
</div>

<hr />

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home"
           aria-selected="true">Indexed Models</a>
    </li>
    @if (Model.Creator.Sites.Any(s => s is MiniIndex.Models.SourceSites.ThingiverseSource))
    {
        <li class="nav-item">
            <a class="nav-link" id="thingiverse-tab" data-toggle="tab" href="#thingiverse" role="tab" aria-controls="thingiverse"
               aria-selected="false">Thingiverse Models</a>
        </li>
    }
</ul>
<div class="tab-content" id="myTabContent">
    <div class="tab-pane show active" id="home" role="tabpanel" aria-labelledby="home-tab">







        <div class="album py-5 bg-light">
            <div class="container-fluid">
                <div class="row">
                    @foreach (var mini in Model.AllCreatorsMinis)
                    {
                        <div class="col-md-4" style="margin-bottom:5px">
                            <div class="card">

                                @if (mini.Sources.Any())
                                {
                                    @:<div class="thumb-wrapper @mini.Sources.First().Site.SiteName">
                                    }
                                    else
                                    {
                                        @:<div class="thumb-wrapper">
                                        }
                                <a href="/Minis/Details?id=@mini.ID">
                                    @if (mini.Thumbnail.Contains("miniindex.blob.core.windows.net/"))
                                    {
                                        <img class="card-img-top" src="@mini.Thumbnail.Replace("miniindex.blob.core.windows.net", Configuration["CDNURL"]+".azureedge.net")" width="314" height="236" />
                                    }
                                    else
                                    {
                                        <img class="card-img-top" src="@mini.Thumbnail" width="314" height="236" />
                                    }
                                    <span></span>
                                </a>
                            </div>

                            <div class="card-body @mini.Status">
                                @Html.DisplayFor(modelItem => mini.Name)
                                <br />
                                <small class="text-muted">
                                    <a href="/Creators/Details?id=@mini.Creator.ID">by @Html.DisplayFor(modelItem => mini.Creator.Name)</a>
                                </small>

                                @if (mini.Status == Status.Pending || mini.Status == Status.Unindexed)
                                {
                                    <p><b>Pending admin approval</b></p>
                                }
                            </div>

                        </div>
                    @:</div>
                }
                </div>
            </div>
        </div>








    </div>
    <div class="tab-pane" id="thingiverse" role="tabpanel" aria-labelledby="thingiverse-tab">
        @if (Model.Creator.Sites.Any(s => s is MiniIndex.Models.SourceSites.ThingiverseSource) && Model.ThingiverseMiniList.Count > 0)
        {
            <div class="album py-5 bg-light">
                <div class="container">
                    <div class="row">
                        @foreach (var item in Model.ThingiverseMiniList)
                        {

                            <div class="col-md-4">
                                @if (item.Status == Models.Status.Unindexed)
                                {
                                    @:<div class="card mb-4 shadow-sm">
                                    }
                                    else
                                    {
                                        @:<div class="card mb-4 shadow-sm" style="opacity:.5;">
                                        }
                                <img class="card-img-top" src="@item.Thumbnail" width="314" height="236" />
                                <div class="card-body @item.Status" align="center">
                                    <p class="card-title">
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </p>
                                    <hr />
                                    @if (item.Status == Models.Status.Approved)
                                    {
                                        <a asp-page="/Minis/Edit" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary">Already indexed </a>
                                    }
                                    else if (item.Status == Models.Status.Pending)
                                    {
                                        <p><b>Pending admin approval</b></p>
                                    }
                                    else if (item.Status == Models.Status.Rejected)
                                    {
                                        <p><b>Rejected by admin</b></p>
                                    }
                                    else if (item.Status == Models.Status.Unindexed)
                                    {
                                        <form method="post" asp-page="/Minis/Create" asp-route-URL="@item.Link">
                                            <input type="submit" class="btn btn-sm btn-success" value="Submit to index!" />
                                        </form>
                                    }
                                    <a href="@Html.DisplayFor(modelItem => item.Link)" class="btn btn-sm btn-primary">View on Thingiverse</a>
                                </div>
                            </div>
                        @: </div>
                    }
                    </div>
                </div>
                <div align="center">
                    @{
                        var prevDisabled = Model.ParsedPageNumber == 0 || Model.ParsedPageNumber == 1 ? "disabled" : "";
                        var nextDisabled = Model.ThingiverseMiniList.Count < 30 ? "disabled" : "";

                        int prevPageNubmer = Model.ParsedPageNumber - 1;
                        int nextPageNumber = Model.ParsedPageNumber + 1;
                    }
                    <a asp-page="./Details" asp-route-id="@Model.Creator.ID" asp-route-PageNumber="@prevPageNubmer" class="btn btn-primary @prevDisabled">&lt;&lt; Previous Page</a>
                    <a asp-page="./Details" asp-route-id="@Model.Creator.ID" asp-route-PageNumber="@nextPageNumber" class="btn btn-primary @nextDisabled">Next Page &gt;&gt;</a>
                </div>
            </div>
        }
        @if (!String.IsNullOrEmpty(Model.ThingiverseError))
        {
            <br />
            <h3 align="center" style="margin:40px;">@Model.ThingiverseError</h3>
        }
    </div>
</div>
</div>
