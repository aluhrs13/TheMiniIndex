@page
@using MiniIndex.Models;
@model MiniIndex.Pages.Minis.DetailsModel
@inject SignInManager<IdentityUser> SignInManager
@{
    ViewData["Title"] = "Details";
}

<div>
    @if (User.IsInRole("Moderator"))
    {
        <div class="card">
            <div class="card-body">
                <h2 class="card-title">Moderate</h2>
                @if (User.IsInRole("Administrator"))
                {
                    <small>Submitted by @Model.Mini.User.Email</small>
                }

                <p><b>Current Status - </b>@Model.Mini.Status</p>
                <hr />

                <a asp-page="./UpdateStatus" asp-route-MiniID="@Model.Mini.ID" asp-route-NewStatus="Approved" class="btn btn-success">
                    Approve
                </a>
                <a asp-page="./UpdateStatus" asp-route-MiniID="@Model.Mini.ID" asp-route-NewStatus="Rejected" class="btn btn-danger">
                    Reject
                </a>
                <a asp-page="./FixThumbnail" asp-route-id="@Model.Mini.ID" class="btn btn-primary">
                    Fix Thumbnail
                </a>
            </div>
        </div>
    }
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

<div class="container">
    <p id="miniid" style="display:none;">@Model.Mini.ID</p>
    <h2>@Html.DisplayFor(model => model.Mini.Name) by <a href="/Creators/Details?id=@Model.Mini.Creator.ID">@Html.DisplayFor(model => model.Mini.Creator.Name)</a></h2>
    <hr />

    <div class="row">
        <div class="col-md-4" align="center">
            <div class="row">
                <div class="col-md-8">
                    @if (Model.Mini.Sources.Any())
                    {
                        @foreach (var miniSource in Model.Mini.Sources)
                        {
                            <a href="@miniSource.Link" class="btn btn-block btn-primary" style="margin-top:10px;">View On @miniSource.Site.SiteName</a>
                        }
                    }
                    else if (!String.IsNullOrEmpty(Model.Mini.Link))                    
                    {
                        <a href="@Html.DisplayFor(modelItem => Model.Mini.Link)" class="btn btn-block btn-primary" style="margin-top:10px;">View at source</a>
                    }
                </div>

                <div class="col-md-4">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a href="#" class="btn btn-block @(Model.IsStarred ? "btn-danger remove-star" : "btn-success add-star")" id="toggle-star" style="margin-top:10px;">
                            <span class="oi oi-star"></span>
                        </a>
                    }
                    else
                    {
                        <a href="/Identity/Account/Login?ReturnUrl=@HttpContext.Request.Path@HttpContext.Request.QueryString" class="btn btn-block btn-success" style="margin-top:10px;" data-toggle="tooltip" data-placement="top" title="Create an account to save your favorites">
                            <span class="oi oi-star"></span>
                        </a>
                    }
                </div>
            </div>

            <hr />

            <img src="@Model.Mini.Thumbnail" class="img-fluid rounded" />
        </div>

        <div class="col-md-6">
            <h3>Tags</h3>
            @if (!SignInManager.IsSignedIn(User))
            {
                <p><strong>Register an account and login to add or remove tags.</strong></p>
            }
            <div id="UsedTags">
                @foreach (var MiniTag in Model.Mini.MiniTags)
                {

                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if (string.IsNullOrEmpty(MiniTag.Tag.Category.ToString()))
                        {
                            <a href="#" id="@MiniTag.Tag.ID" class="btn btn-outline-danger remove-tag" style="margin-top:5px;">- <b>@MiniTag.Tag.TagName</b></a>
                        }
                        else
                        {
                            <a href="#" id="@MiniTag.Tag.ID" class="btn btn-outline-danger remove-tag" style="margin-top:5px;">- <small>@MiniTag.Tag.Category:</small> <b>@MiniTag.Tag.TagName</b></a>
                        }

                    }
                    else
                    {
                        @if (string.IsNullOrEmpty(MiniTag.Tag.Category.ToString()))
                        {
                            <span class="badge badge-primary">
                                @MiniTag.Tag.TagName
                            </span>
                        }
                        else
                        {
                            <span class="badge badge-primary">
                                <small>@MiniTag.Tag.Category:</small> @MiniTag.Tag.TagName
                            </span>
                        }
                    }
                }
            </div>
            <div id="AddedTags">
            </div>
        </div>
    </div>

    @if (SignInManager.IsSignedIn(User))
    {

        <div class="row">
            <div class="col-md-12">

                <hr />

                <h2>Add Tags</h2>
                Filter <input id="tagSearch" type="text" />

                <hr />

                <div id="UnusedTags">

                    @if (User.IsInRole("Moderator") && Model.RecommendedTags.Any())
                    {
                        <div class="add-tag-div">
                            <h3 class="add-tag-header">Recommended Tags</h3>
                            @foreach (var Tag in Model.RecommendedTags)
                            {
                                <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                            }
                        </div>
                        <hr />
                    }

                    <div class="add-tag-div">
                        <h3 class="add-tag-header">Genre</h3>
                        @foreach (var Tag in Model.UnusedTags.Where(m => m.Category.ToString() == "Genre"))
                        {
                            <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                        }
                    </div>

                    <div class="add-tag-div">
                        <h3 class="add-tag-header">Use</h3>
                        @foreach (var Tag in Model.UnusedTags.Where(m => m.Category.ToString() == "Use"))
                        {
                            <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                        }
                    </div>

                    @{var PreviousCategory = "";}
                    <div class="add-tag-div">

                        @foreach (var Tag in Model.UnusedTags
                            .Where(m => !string.IsNullOrEmpty(m.Category.ToString())
                                && m.Category != TagCategory.Genre
                                && m.Category != TagCategory.OtherDescription
                                && m.Category != TagCategory.CreatureName
                                && m.Category != TagCategory.Use))
                        {
                            @if (Tag.Category.ToString() != PreviousCategory)
                            {
                            @:</div>
                            @:<div class="add-tag-div">
                                if (string.IsNullOrEmpty(Tag.Category.ToString()))
                                {
                                    <hr />
                                }
                                else
                                {
                                    <h3 class="add-tag-header">@Tag.Category</h3>
                                }

                            }
                            <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                            PreviousCategory = Tag.Category.ToString();
                        }
                    </div>
                    <div class="add-tag-div">
                        <h3 class="add-tag-header">Creature Name</h3>
                        @foreach (var Tag in Model.UnusedTags.Where(m => m.Category.ToString() == "CreatureName"))
                        {
                            <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                        }
                    </div>
                    <hr />
                    <h3>Other Tags</h3>
                    @foreach (var Tag in Model.UnusedTags.Where(m => string.IsNullOrEmpty(m.Category.ToString()) || m.Category.ToString() == "OtherDescription"))
                    {
                        <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                    }
                </div>
                <a href="#" id="AddNewTag" class="btn btn-success" style="margin-top:5px;">+ Add as new tag</a>
            </div>
        </div>
    }
</div>