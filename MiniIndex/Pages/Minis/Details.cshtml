@page
@using MiniIndex.Models;
@model MiniIndex.Pages.Minis.DetailsModel
@inject SignInManager<IdentityUser> SignInManager
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Details";
    @if (User.IsInRole("Administrator"))
    {
        ViewData["Submitter"] = @Model.Mini.User.Email;
    }else{
        if(@Model.Mini.User.Email == "admin@theminiindex.com"){
            ViewData["Submitter"] = "Auto-submitted";
        }else{
            ViewData["Submitter"] = "User";
        }
    }
}

@section Scripts
{
    <environment include="Development">
        <script type="module" src="~/js/mini.js"></script>
        <link rel="stylesheet" href="~/css/mini.css">
    </environment>

    <environment include="Staging">
        <script type="module" src="~/dist/mini.entry.js" defer></script>
        <link rel="stylesheet" href="~/dist/mini.css">
    </environment>

    <environment include="Production">
        <script type="module" src="https://miniindex.azureedge.net/mini.entry.js" defer></script>
        <link rel="stylesheet" href="~/dist/mini.css">
    </environment>
    @if (User.IsInRole("Moderator"))
    {
        <script type="text/javascript">
            function updateStatus(status){
                var id = document.getElementById("miniid").innerHTML;
                var data = '{"id": '+id+', "status": '+status+'}';

                fetch("/api/Minis", {method: "PATCH", body: data,     headers: {
                  'Content-Type': 'application/json'
                } })
                  .then(response => {
                    if (!response.ok) {
                      throw new Error('Network response was not ok');
                    }

                    return response.json();
                  })
                  .then(() => {
                    location.reload();
                  })
                  .catch(error => {
                    console.error(error);
                    document.getElementById("secondary-nav").style.backgroundColor = "red";
                    document.getElementById("currStatus").innerHTML = "ERROR.";
                  });
            }

            function updateThumbnail(){
                var id = document.getElementById("miniid").innerHTML;

                fetch("/api/Minis/"+id+"/FixThumbnail", {
                    method: "PATCH",
                    headers: {
                        'Content-Type': 'application/json'
                    } 
                })
                  .then(response => {
                    if (!response.ok) {
                      throw new Error('Network response was not ok');
                    }

                    return response.json();
                  })
                  .then(() => {
                    location.reload();
                  })
                  .catch(error => {
                    console.error(error);
                    document.getElementById("secondary-nav").style.backgroundColor = "red";
                  });
            }
        </script>
    }
}
@if (User.IsInRole("Moderator"))
{
    <div class="cluster style-secondary" id="secondary-nav">
        <div class="row">
            <div class="montserrat">
                <span class="xsmall">MODERATOR</span>
                <br />
                <span class="larger">TOOLS</span>
            </div>
        </div>
        <div>
            <b>Submitted by: </b>@ViewData["Submitter"]
            <br/>
            <b>Status: </b><span id="currStatus">@Model.Mini.Status</span>
        </div>
        <div class="cluster">
            <div class="center"><a href="#" class="btn style-secondary" onclick="updateStatus(1)">Approve</a></div>
            <div class="center"><a href="#" class="btn style-secondary" onclick="updateStatus(0)">Visible</a></div>
            <div class="center"><a href="#" class="btn style-secondary" onclick="updateStatus(2)">Reject</a></div>
            <div class="center"><a href="#" class="btn style-secondary" onclick="updateThumbnail()">Update Thumbnail</a></div>
        </div>
    </div>
}
<div class="bounded">
    <!-- TODO: Do this right? -->
    <p id="miniid" style="display:none;">@Model.Mini.ID</p>

    <h1>
        @Model.Mini.Name by <a href="/Creators/Details?id=@Model.Mini.Creator.ID">@Model.Mini.Creator.Name</a>
    </h1>

    <div class="switcher">
        @if (Model.Mini.Sources.Any())
        {
            @foreach (var miniSource in Model.Mini.Sources)
            {
                <a href="/api/Minis/@Model.Mini.ID/Redirect" class="btn btn-block style-primary @miniSource.Site.SiteName">View On @miniSource.Site.SiteName</a>
            }
        }
        else if (!String.IsNullOrEmpty(Model.Mini.Link))
        {
            <a href="/api/Minis/@Model.Mini.ID/Redirect" class="btn btn-block style-primary-border">View at source</a>
        }

        @if (SignInManager.IsSignedIn(User))
        {
            <a href="#" class="btn btn-block @(Model.IsStarred ? "remove-star" : "add-star")" id="toggle-star">
                @(Model.IsStarred ? "Remove from Favorites" : "Add to Favorites")
            </a>
        }
        else
        {
            <a href="/Identity/Account/Login?ReturnUrl=@HttpContext.Request.Path@HttpContext.Request.QueryString" class="btn btn-block add-star">
                Login to Favorite
            </a>
        }
    </div>

    <div class="switcher">
        <div align="center">
            @if (Model.Mini.Thumbnail.Contains("miniindex.blob.core.windows.net/"))
            {
                <img style="max-width:100%" src="@Model.Mini.Thumbnail.Replace("miniindex.blob.core.windows.net", Configuration["CDNURL"]+".azureedge.net")" />
            }
            else
            {
                <img style="max-width:100%" src="@Model.Mini.Thumbnail" />
            }
        </div>

        <div>
            <div class="row" style="align-items:flex-end;">
                <h2 style="flex-grow:1;">Tags</h2>
                <span class="small" style="padding-bottom:1.25rem;">
                    Something look wrong? <a asp-page="./Edit" asp-route-id="@Model.Mini.ID">Tag this Mini</a>
                </span>            
            </div>
            @foreach (var MiniTag in Model.Mini.MiniTags.Where(mt => mt.Status == Status.Approved))
            {
                @if (string.IsNullOrEmpty(MiniTag.Tag.Category.ToString()))
                {
                    <span class="badge style-primary">
                        <b>@MiniTag.Tag.TagName</b>
                    </span>
                }
                else
                {
                    <span class="badge style-primary">
                        @MiniTag.Tag.Category: <b>@MiniTag.Tag.TagName</b>
                    </span>
                }
            }
        </div>
    </div>

    <!-- TODO: async this -->
    <aside>
        <hr />
        <h2>Related Minis</h2>
        <div align="center">
            <div id="loading-spinner" style="width:64px;height:64px;"></div>
        </div>
        <div class="grid hidden"id="related-minis">

        </div>
    </aside>
</div>
