@page
@using MiniIndex.Models;
@model MiniIndex.Pages.Minis.EditModel
@inject SignInManager<IdentityUser> SignInManager
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Edit";
}

@section Scripts
{
    <environment include="Development">
        <script type="module" src="~/dist/stars.entry.js" defer></script>
    </environment>

    <environment exclude="Development">
        <script type="module" src="https://miniindex.azureedge.net/stars.entry.js" defer></script>
    </environment>
}

<div>
    @if (User.IsInRole("Moderator"))
    {
        <div class="card shadow">
            <div class="card-body">
                <h2 class="card-title">Moderate</h2>
                @if (User.IsInRole("Administrator"))
                {
                    <small>Submitted by @Model.Mini.User.Email</small>
                }

                <p><b>Current Status - </b>@Model.Mini.Status</p>
                <p><b>Cost - </b>@Model.Mini.Cost</p>
                <p><b>Thumbnail - </b>@Model.Mini.Thumbnail</p>
                <hr />

                <a asp-page="./UpdateStatus" asp-route-MiniID="@Model.Mini.ID" asp-route-NewStatus="Approved" class="btn btn-success">
                    Approve
                </a>
                <a asp-page="./UpdateStatus" asp-route-MiniID="@Model.Mini.ID" asp-route-NewStatus="Pending" class="btn btn-warning">
                    Visible
                </a>
                <a asp-page="./UpdateStatus" asp-route-MiniID="@Model.Mini.ID" asp-route-NewStatus="Rejected" class="btn btn-danger">
                    Reject
                </a>
                <a asp-page="./UpdateStatus" asp-route-MiniID="@Model.Mini.ID" asp-route-NewStatus="Deleted" class="btn btn-danger">
                    Delete
                </a>
                <hr />
                <a asp-page="./FixThumbnail" asp-route-id="@Model.Mini.ID" class="btn btn-primary">
                    Fix Thumbnail
                </a>
            </div>
        </div>
    }
</div>

<div class="container">
    <p id="miniid" style="display:none;">@Model.Mini.ID</p>
    <div>
        <a asp-page="./Details" asp-route-id="@Model.Mini.ID">Back to Mini</a>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <h2 class="card-title">Tag Guidance</h2>
            <p>
                <b>Thanks for contributing to The Mini Index!</b><br />
                We have some guidelines written about how to make your
                tags great, please read through them <a href="https://github.com/aluhrs13/TheMiniIndex/wiki/How-to-tag-Minis">here.</a> At a minimum, please make sure you include
                the genre, use, and any notable descriptions like the creature's name and type or race and gender.
                Your Mini and tags will show up once a moderator gets a chance to look and approve it. If you're submitting a bunch of Minis from a single creator, we'll approve at most a few a day to not flood the front page with a single creator.
            </p>

            <p><b>We're also experimenting with automatic tag additions soon, when adding a tag you may notice more tags than the one you clicked getting added. Feel free to remove those, and if they
                appear extremely wrong, hit the "Something's wrong" button below and let us know what you don't like!</b></p>

            <a href="/Minis/Help" class="btn btn-primary">Tag another Mini</a>
            <a href="https://forms.office.com/Pages/ResponsePage.aspx?id=DQSIkWdsW0yxEjajBLZtrQAAAAAAAAAAAANAAYEBbR1URVo3SDNGWTlENU5FNkw3VjRaNVJPVkVDRy4u" target="_blank" class="btn btn-secondary">
                Something's wrong
            </a>
        </div>
    </div>
    <br />

    <h2>@Html.DisplayFor(model => model.Mini.Name) by <a href="/Creators/Details?id=@Model.Mini.Creator.ID">@Html.DisplayFor(model => model.Mini.Creator.Name)</a></h2>
    <hr />

    <div class="row">
        <div class="col-md-4" align="center">
            <div class="row">
                <div class="col-md-12">
                    @if (Model.Mini.Sources.Any())
                    {
                        @foreach (var miniSource in Model.Mini.Sources)
                        {
                            <a href="@miniSource.Link" class="btn btn-block btn-primary @miniSource.Site.SiteName" style="margin-top:10px;">View On @miniSource.Site.SiteName</a>
                        }
                    }
                    else if (!String.IsNullOrEmpty(Model.Mini.Link))
                    {
                        <a href="@Html.DisplayFor(modelItem => Model.Mini.Link)" class="btn btn-block btn-primary" style="margin-top:10px;">View at source</a>
                    }
                </div>
            </div>

            <hr />

            @if (Model.Mini.Thumbnail.Contains("miniindex.blob.core.windows.net/"))
            {
                <img class="img-fluid rounded" src="@Model.Mini.Thumbnail.Replace("miniindex.blob.core.windows.net", Configuration["CDNURL"]+".azureedge.net")" />
            }
            else
            {
                <img class="img-fluid rounded" src="@Model.Mini.Thumbnail" />
            }
        </div>

        <div class="col-md-6">
            <h3>Tags</h3>
            <hr />
            <div align="center">
                <img src="~/images/loading.gif" class="loading-spinner" style="display:none;width:64px;height:64px;"  />
            </div>
            <div id="UsedTags">

            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">

            <hr />

            <h2>Add Tags</h2>
            Filter <input id="tagSearch" type="text" />

            <hr />

            <div id="UnusedTags">

                @if (Model.RecommendedTags.Count > 0)
                {
                    <div class="add-tag-div">
                        <h3 class="add-tag-header">Quick Tag</h3>
                        @foreach (var Tag in Model.RecommendedTags)
                        {
                            <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                        }
                    </div>

                    <hr />
                }

                <div class="add-tag-div">
                    <h3 class="add-tag-header">Genre</h3>
                    @foreach (var Tag in Model.UnusedTags.Where(m => m.Category.ToString() == "Genre"))
                    {
                        <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                    }
                </div>

                <div class="add-tag-div">
                    <h3 class="add-tag-header">Use</h3>
                    @foreach (var Tag in Model.UnusedTags.Where(m => m.Category.ToString() == "Use"))
                    {
                        <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                    }
                </div>

                @{var PreviousCategory = "";}
                <div class="add-tag-div">

                    @foreach (var Tag in Model.UnusedTags
                .Where(m => !string.IsNullOrEmpty(m.Category.ToString())
                    && m.Category != TagCategory.Genre
                    && m.Category != TagCategory.OtherDescription
                    && m.Category != TagCategory.CreatureName
                    && m.Category != TagCategory.Use))
                    {
                        @if (Tag.Category.ToString() != PreviousCategory)
                        {
                        @:</div>
                        @:<div class="add-tag-div">
                            if (string.IsNullOrEmpty(Tag.Category.ToString()))
                            {
                                <hr />
                            }
                            else
                            {
                                <h3 class="add-tag-header">@Tag.Category</h3>
                            }

                        }
                        <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                        PreviousCategory = Tag.Category.ToString();
                    }
                </div>
                <div class="add-tag-div">
                    <h3 class="add-tag-header">Creature Name</h3>
                    @foreach (var Tag in Model.UnusedTags.Where(m => m.Category.ToString() == "CreatureName"))
                    {
                        <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                    }
                </div>
                <hr />
                <h3>Other Tags</h3>
                @foreach (var Tag in Model.UnusedTags.Where(m => string.IsNullOrEmpty(m.Category.ToString()) || m.Category.ToString() == "OtherDescription"))
                {
                    <a href="#" id="@Tag.ID" class="btn btn-outline-success add-tag" style="margin-top:5px;">+ @Tag.TagName</a>
                }
            </div>
            <a href="#" id="AddNewTag" class="btn btn-success" style="margin-top:5px;">+ Add as new tag</a>
        </div>
    </div>
</div>
